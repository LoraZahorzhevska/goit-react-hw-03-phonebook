{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","Filter","ElementContactList","contact_name","contact_number","ContactList","shownContacts","onClick","contact_list","map","contact_item","item_button","App","contacts","filter","formAddContact","contact","contactNames","renderContacts","contactsList","contactName","newContact","includes","alert","changeFilter","target","getFilteredContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","React","contactsUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bff8219.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__1M7YV\",\"form_button\":\"ContactForm_form_button__3RpT8\",\"label\":\"ContactForm_label__1xZhZ\",\"input\":\"ContactForm_input__aBgC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list___WyVW\",\"item\":\"ContactList_item__tpZDu\",\"contact_list\":\"ContactList_contact_list__1Ba5P\",\"contact_item\":\"ContactList_contact_item__5ZGKk\",\"item_button\":\"ContactList_item_button__3Lk5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__2Q2Qv\",\"item\":\"Filter_item__3WEW1\",\"avatar\":\"Filter_avatar__2FqRv\",\"name\":\"Filter_name__3-wrq\",\"status_isOnline\":\"Filter_status_isOnline__334dk\",\"status_isOffline\":\"Filter_status_isOffline__2cjt2\",\"label\":\"Filter_label__wn0No\",\"input\":\"Filter_input__3zcKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__kjrBT\",\"contact_number\":\"ElementContactList_contact_number__3KmHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2Q2g7\"};","import React from \"react\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    // name: this.props.name,\r\n    // number: this.props.number\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  /** Отвечает за обновление состояния*/\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  /** Вызывается при отправке формы */\r\n  // Проп который передается форме для вызова при сабмите\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\r\n          <div>\r\n            <label htmlFor={this.nameInputId} className={styles.label}>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.nameInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label htmlFor={this.numberInputId} className={styles.label}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                value={number}\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.numberInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.form_button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../ElementContactList/ElementContactList.module.css\";\r\n\r\nconst ElementContactList = ({ name, number }) => {\r\n  return (\r\n    <>\r\n      <span className={styles.contact_name}>{name}: </span>\r\n      <span className={styles.contact_number}>{number}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nElementContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nElementContactList.defaultProps = {\r\n  name: \"Hello World\",\r\n  number: 123456789,\r\n};\r\nexport default ElementContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ElementContactList from \"../ElementContactList\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ shownContacts, onClick }) => {\r\n  return (\r\n    <ul className={styles.contact_list}>\r\n      {shownContacts().map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={styles.contact_item}>\r\n            <ElementContactList name={name} number={number} />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onClick(id);\r\n              }}\r\n              className={styles.item_button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  shownContacts: PropTypes.func.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport Container from \"./Component/Container\";\nimport ContactForm from \"./Component/ContactForm\";\nimport Filter from \"./Component/Filter\";\nimport ContactList from \"./Component/ContactList\";\nimport contactsUser from \"./json/contacts.json\";\n\nclass App extends React.Component {\n  static defaultProps = {\n    contacts: contactsUser,\n    filter: \"\",\n  };\n\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    // contacts:[],\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  };\n\n  formAddContact = ({ name, number }) => {\n    // console.log(name, number);\n\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    const contactNames = this.state.contacts.map((contact) => contact.name);\n    this.renderContacts(contactNames, contact.name, contact);\n  };\n\n  renderContacts = (contactsList, contactName, newContact) => {\n    if (contactsList.includes(contactName)) {\n      alert(`${contactName} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, newContact],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(prevState);\n    // console.log(this.state);\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Обновились контакты, записываем в хранилище\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formAddContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n          <ContactList\n            shownContacts={this.getFilteredContacts}\n            onClick={this.deleteContact}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}